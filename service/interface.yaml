openapi: 3.0.3
info:
  title: 广东太保医审平台案件交互接口
  version: 1.0.0

servers:
  - url: http://localhost:3001

paths:
  /createCase:
    post:
      summary: 用于接收渠道推送的案件信息
      operationId: createCase
      tags:
        - Submit Task
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCaseDto"
            example:
              custid: "21"
              uuid: "ef30e1ca-9888-451d-a328-08bfc6a7d482"
              token: "Encrypted Payload（加密后的案件数据）"
              withCaseInfoInReturn: true
      responses:
        "200":
          description: 推送案件成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCaseResDto"
              example:
                code: 200
                data:
                  caseNo: "97604F07-1758-4282-9D43-313C4A3BA1D4"

  /queryCase:
    post:
      summary: 查询任务状态，及识别结果
      operationId: queryCase
      tags:
        - Query Result
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryCaseDto"
            example:
              custid: "21"
              uuid: "ef30e1ca-9888-451d-a328-08bfc6a7d482"
              token: "Encrypted Payload（加密后的查询参数）"
      responses:
        "200":
          description: 查询成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueryCaseResDto"

components:
  schemas:
    CreateCaseDto:
      type: object
      required:
        - custid
        - uuid
        - token
      properties:
        custid:
          type: string
          description: 客户渠道 ID
        uuid:
          type: string
          description: 标识案件的唯一标识，用于客户确认结果。由客户端保证唯一性。
        withCaseInfoInReturn:
          type: boolean
          description: 指示是否返回案件详情，用于检验是否正确提交。默认值：false
        token:
          type: string
          description: |
            经过加密后的案件数据信息。

            ## 加密方案
            ---

            为了保证数据的安全性，案件数据采用`aes-256-ecb`加密，加密结果使用`base64`编码。

            ### 1. 原始的案件详情数据结构

            原始的案件详情数据结构请参考：*OriginalCaseDetailDto*

            ### 2. 由平台方分配给用户的参数

            | 参数名 | 描述 | 给广东太保分配的值 |
            |:-------|:-----|:-----------------:|
            | custid | 用户渠道 ID | 21 |
            | appkey | 用户授权码 | asdfghjkl |
            | secretkey | 用户安全码 | dwsuhfci |
            | salt | 加密密钥明文 | gdtb |

            ### 3. 签名

            签名，用以校验参数是否被篡改。

            **计算方法**：

            ```
            md5(appkey+registno+timestamp+uuid+secretkey).digest("hex")
            ```

            ### 4. 密钥

            `aes-256-ecb`加密需要 32bits 的密钥，因此使用`md5(salt).digest("hex")`作为加密密钥。

            ### 5. 加密

            Node.js 示例：

            ```javascript
            const crypto = require("crypto");

            const md5 = crypto.createHash("md5");
            const cipher = crypto.createCipheriv(
              "aes-256-ecb",
              md5.update(salt).digest("hex"),
              ""
              );
            tokenCipher = cipher.update(
              JSON.stringify(tokenJson),
              "base64"
              );
            tokenCipher += cipher.final("base64");
            ```

    CreateCaseResDto:
      type: object
      description: 当`withCaseInfoInReturn = true`时，在`data`中返回`caseInfo`字段。
      properties:
        code:
          type: integer
          description: 结果代码。200：推送成功
        msg:
          type: string
          description: 发生错误时，返回错误信息。成功时，不返回该字段。
        data:
          type: object
          properties:
            caseNo:
              type: string
              description: 创建案件成功时，返回案件号。由服务端创建，全局唯一。
            caseInfo:
              description: 当 `withCaseInfoInReturn = true` 时，返回该字段。
              $ref: "#/components/schemas/OriginalCaseDetailDto"

    OriginalCaseDetailDto:
      type: object
      properties:
        appkey:
          type: string
          description: 给渠道客户分配的授权码。
        images:
          type: array
          description: 案件资料图片数组
          items:
            $ref: "#/components/schemas/OriginalImageDetailDto"
        insurecode:
          type: string
          description: 被保险人身份证号
        insureName:
          type: string
          description: 被保险人姓名
        registNo:
          type: string
          description: 报案号
        sign:
          type: string
          description: |
            签名，用以校验参数是否被篡改。

            **计算方法**：

            ```
            md5(appkey+registno+timestamp+uuid+secretkey).digest("hex")
            ```
        timestamp:
          type: string
          description: 接口调用时间
        weight:
          type: integer
          description: 任务权重，默认为3，加急任务请设置为5。
        zmark:
          type: string
          description: 保留字段，用于自定义信息，目前未使用。

    OriginalImageDetailDto:
      type: object
      properties:
        id:
          type: string
          description: 图片序号，在本案件中唯一。由客户端保证唯一性
        name:
          type: string
          description: 图片的名称。
        url:
          type: string
          description: 图片的 URL

    QueryCaseDto:
      type: object
      properties:
        custid:
          type: string
          description: 客户渠道 ID
        uuid:
          type: string
          description: 标识案件的唯一标识，用于客户确认结果。由客户端保证唯一性。
        token:
          type: string
          description: |
            加密后的查询验证条件。

            ## 加密方案
            ---

            验证数据采用`aes-256-ecb`加密，加密结果使用`base64`编码。

            ### 1. 验证数据的原始数据结构

            | 字段名 | 描述    |
            |-------|--------|
            | appkey | 用户授权码  |
            | caseNo | 任务序号，在提交任务时，由服务端返回，全局唯一  |
            | registNo | 报案号  |
            | sign | 参数签名，用以校验传入参数  |
            | timestamp | 接口调用时间戳  |

            ### 2. 由平台方分配给用户的参数

            | 参数名 | 描述 | 给广东太保分配的值 |
            |:-------|:-----|:-----------------:|
            | custid | 用户渠道 ID | 21 |
            | appkey | 用户授权码 | asdfghjkl |
            | secretkey | 用户安全码 | dwsuhfci |
            | salt | 加密密钥明文 | gdtb |

            ### 3. 签名

            签名，用以校验参数是否被篡改。

            **计算方法**：

            ```
            md5(appkey+caseNo+timestamp+uuid+secretkey).digest("hex")
            ```

            ### 4. 密钥

            `aes-256-ecb`加密需要 32bits 的密钥，因此使用`md5(salt).digest("hex")`作为加密密钥。

            ### 5. 加密

            Node.js 示例：

            ```javascript
            const crypto = require("crypto");

            const md5 = crypto.createHash("md5");
            const cipher = crypto.createCipheriv(
              "aes-256-ecb",
              md5.update(salt).digest("hex"),
              ""
              );
            tokenCipher = cipher.update(
              JSON.stringify(tokenJson),
              "base64"
              );
            tokenCipher += cipher.final("base64");
            ```

    QueryCaseResDto:
      type: object
      properties:
        code:
          type: integer
          description: 结果代码。200：查询成功
        msg:
          type: string
          description: 发生错误时，返回错误信息。成功时，不返回该字段。
        uuid:
          type: string
          description: 创建任务时，由创建方生成的任务唯一标识。
        data:
          type: object
          description: 查询结果。
          properties:
            caseState:
              $ref: "#/components/schemas/CaseStateDto"
            caseInfo:
              $ref: "#/components/schemas/CaseInfoDto"
            result:
              type: array
              description: 以每张图片为单位，汇总所有的识别结果。
              items:
                $ref: "#/components/schemas/ImageResultDto"

    CaseStateDto:
      type: object
      properties:
        uploadTime:
          type: string
          description: 任务的上传时间
        state:
          type: integer
          description: 任务状态。0：尚未开始；1：处理中；2：处理完成
          enum:
            - 0
            - 1
            - 2
        zmark:
          type: string
          description: 来自前置平台的备注
        ymark:
          type: string
          description: 来自识别平台的备注

    CaseInfoDto:
      type: object
      properties:
        caseNo:
          type: string
          description: 任务号
        registNo:
          type: string
          description: 报案号
        insureName:
          type: string
          description: 被保险人姓名
        insurecode:
          type: string
          description: 被保险人身份证号
        costType:
          type: string
          description: 费用类型
          enum:
            - 门诊
            - 住院
            - 外购药
        invoiceTotalAmount:
          type: number
          description: 案件下所有发票的总金额
        admissionDate:
          type: string
          description: 入院日期
        dischargeDate:
          type: string
          description: 出院日期
        hospitalizationDays:
          type: number
          description: 住院天数
        invoiceList:
          type: array
          description: 发票详情列表
          items:
            allOf:
              - $ref: "#/components/schemas/InvoiceBasicInfoDto"
              - type: object
                properties:
                  allExpenseSource:
                    type: string
                    description: 全部自费金额来源
                    enum:
                      - 清单
                      - 发票
                      - 结算单
                  partsExpenseSource:
                    type: string
                    description: 部分自费金额来源
                    enum:
                      - 清单
                      - 发票
                      - 结算单
                  basicMedicalInsuranceAmount:
                    type: number
                    description: 基本医保范围内金额
                  thirdPartyHasPaidAmount:
                    type: number
                    description: 第三方支付金额

    InvoiceBasicInfoDto:
      type: object
      properties:
        invoiceNumber:
          type: string
          description: 发票号码
        invoiceName:
          type: string
          description: 发票名称
        invoiceAmount:
          type: number
          description: 发票金额
        invoiceDate:
          type: string
          description: 开票日期
        hospital:
          type: string
          description: 医院名称或外购药开票单位名称
        hospitalGrade:
          type: string
          description: 医院等级
          enum:
            - 三级甲等
            - 三级乙等
            - 三级丙等
            - 二级甲等
            - 二级乙等
            - 二级丙等
            - 一级甲等
            - 一级乙等
            - 一级丙等
            - 其它
        reimbursementAmount:
          type: number
          description: 医保统筹（报销）金额
        allExpenseAmount:
          type: number
          description: 全部自费金额
        partsExpenseAmount:
          type: number
          description: 部分自费金额
        remark:
          type: string
          description: 备注

    ImageResultDto:
      type: object
      description: 单张图片识别结果，支持一图多票的场景。
      properties:
        imageId:
          type: string
          description: 图片 ID
        imageName:
          type: string
          description: 图片名称
        moreThanOneList:
          type: number
          description: 是否一图多票。1：是；2：否
        remark:
          type: string
          description: 备注
        details1:
          type: array
          description: 发票详情。如果一图多票，则返回多个数组元素。
          items:
            $ref: "#/components/schemas/InvoiceResultDto"
        details2:
          type: array
          description: 清单详情。如果一图多票，则返回多个数组元素。
          items:
            $ref: "#/components/schemas/ListResultDto"
        details3:
          type: array
          description: 结算单详情。如果一图多票，则返回多个数组元素。
          items:
            $ref: "#/components/schemas/BillResultDto"
        details4:
          type: array
          description: 其它单据详情。如果一图多票，则返回多个数组元素。
          items:
            $ref: "#/components/schemas/OtherResultDto"

    ImageTypeDto:
      type: object
      properties:
        imageType:
          type: string
          description: 图片类型。
          enum:
            - 发票
            - 清单
            - 结算单
            - 其它
        imageClassification:
          type: string
          description: 图片分类
          enum:
            - 门诊发票
            - 住院发票
            - 外购药发票
            - 门诊清单
            - 住院清单
            - 结算单
            - 其它

    InvoiceResultDto:
      allOf:
        - $ref: "#/components/schemas/ImageTypeDto"
        - $ref: "#/components/schemas/InvoiceBasicInfoDto"

    ListResultDto:
      allOf:
        - $ref: "#/components/schemas/ImageTypeDto"
        - type: object
          description: 单张清单识别详情
          properties:
            listName:
              type: string
              description: 清单名称
            hospital:
              type: string
              description: 医院名称
            # TODO: 确定是否需要加入“医院等级”？
            name:
              type: string
              description: 清单上的姓名
            associatedInvoiceNumber:
              type: string
              description: 此清单所对应的发票号
            remark:
              type: string
              description: 备注
            list:
              type: array
              description: 清单识别明细
              items:
                $ref: "#/components/schemas/ListItemDto"

    ListItemDto:
      type: object
      # TODO: 很多字段目前并没有识别，需要逐一确认。
      properties:
        typeName:
          type: string
          description: 大项名称。例如：“西药费”、“中药费“
        itemName:
          type: string
          description: 项目名称。例如：氯化钠注射液
        specification:
          type: string
          description: 规格
        count:
          type: number
          description: 数量
        unitPrice:
          type: number
          description: 单价
        countPrice:
          type: number
          description: 费用金额
        drugClassification:
          type: string
          description: 社保标识
          enum:
            - 甲
            - 乙
            - 自费
        drugClassificationSource:
          type: string
          description: 社保标识来源
          enum:
            - 清单
            - 医保库
        ownPayScale:
          type: number
          description: 自付比例
        ownPayAmount:
          type: number
          description: 自付金额

    BillResultDto:
      allOf:
        - $ref: "#/components/schemas/ImageTypeDto"
        - type: object
          properties:
            totalAmount:
              type: number
              description: 总金额
            allExpenseAmount:
              type: number
              description: 全部自费金额
            partsExpenseAmount:
              type: number
              description: 部分自费金额
            reimbursementAmount:
              type: number
              description: 医保报销金额
            remark:
              type: string
              description: 备注

    OtherResultDto:
      allOf:
        - $ref: "#/components/schemas/ImageTypeDto"
        - type: object
          properties:
            ocrResult:
              type: string
              description: 识别结果，没有具体定义，任意字符串。
            remark:
              type: string
              description: 备注
