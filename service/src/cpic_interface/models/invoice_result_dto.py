# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from cpic_interface.models.base_model_ import Model
from cpic_interface.models.image_type_dto import ImageTypeDto
from cpic_interface.models.invoice_basic_info_dto import InvoiceBasicInfoDto
from cpic_interface import util

from cpic_interface.models.image_type_dto import ImageTypeDto  # noqa: E501
from cpic_interface.models.invoice_basic_info_dto import InvoiceBasicInfoDto  # noqa: E501

class InvoiceResultDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_type=None, image_classification=None, invoice_number=None, invoice_name=None, invoice_amount=None, invoice_date=None, hospital=None, hospital_grade=None, reimbursement_amount=None, all_expense_amount=None, parts_expense_amount=None, remark=None):  # noqa: E501
        """InvoiceResultDto - a model defined in OpenAPI

        :param image_type: The image_type of this InvoiceResultDto.  # noqa: E501
        :type image_type: str
        :param image_classification: The image_classification of this InvoiceResultDto.  # noqa: E501
        :type image_classification: str
        :param invoice_number: The invoice_number of this InvoiceResultDto.  # noqa: E501
        :type invoice_number: str
        :param invoice_name: The invoice_name of this InvoiceResultDto.  # noqa: E501
        :type invoice_name: str
        :param invoice_amount: The invoice_amount of this InvoiceResultDto.  # noqa: E501
        :type invoice_amount: float
        :param invoice_date: The invoice_date of this InvoiceResultDto.  # noqa: E501
        :type invoice_date: str
        :param hospital: The hospital of this InvoiceResultDto.  # noqa: E501
        :type hospital: str
        :param hospital_grade: The hospital_grade of this InvoiceResultDto.  # noqa: E501
        :type hospital_grade: str
        :param reimbursement_amount: The reimbursement_amount of this InvoiceResultDto.  # noqa: E501
        :type reimbursement_amount: float
        :param all_expense_amount: The all_expense_amount of this InvoiceResultDto.  # noqa: E501
        :type all_expense_amount: float
        :param parts_expense_amount: The parts_expense_amount of this InvoiceResultDto.  # noqa: E501
        :type parts_expense_amount: float
        :param remark: The remark of this InvoiceResultDto.  # noqa: E501
        :type remark: str
        """
        self.openapi_types = {
            'image_type': str,
            'image_classification': str,
            'invoice_number': str,
            'invoice_name': str,
            'invoice_amount': float,
            'invoice_date': str,
            'hospital': str,
            'hospital_grade': str,
            'reimbursement_amount': float,
            'all_expense_amount': float,
            'parts_expense_amount': float,
            'remark': str
        }

        self.attribute_map = {
            'image_type': 'imageType',
            'image_classification': 'imageClassification',
            'invoice_number': 'invoiceNumber',
            'invoice_name': 'invoiceName',
            'invoice_amount': 'invoiceAmount',
            'invoice_date': 'invoiceDate',
            'hospital': 'hospital',
            'hospital_grade': 'hospitalGrade',
            'reimbursement_amount': 'reimbursementAmount',
            'all_expense_amount': 'allExpenseAmount',
            'parts_expense_amount': 'partsExpenseAmount',
            'remark': 'remark'
        }

        self._image_type = image_type
        self._image_classification = image_classification
        self._invoice_number = invoice_number
        self._invoice_name = invoice_name
        self._invoice_amount = invoice_amount
        self._invoice_date = invoice_date
        self._hospital = hospital
        self._hospital_grade = hospital_grade
        self._reimbursement_amount = reimbursement_amount
        self._all_expense_amount = all_expense_amount
        self._parts_expense_amount = parts_expense_amount
        self._remark = remark

    @classmethod
    def from_dict(cls, dikt) -> 'InvoiceResultDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InvoiceResultDto of this InvoiceResultDto.  # noqa: E501
        :rtype: InvoiceResultDto
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_type(self):
        """Gets the image_type of this InvoiceResultDto.

        图片类型。  # noqa: E501

        :return: The image_type of this InvoiceResultDto.
        :rtype: str
        """
        return self._image_type

    @image_type.setter
    def image_type(self, image_type):
        """Sets the image_type of this InvoiceResultDto.

        图片类型。  # noqa: E501

        :param image_type: The image_type of this InvoiceResultDto.
        :type image_type: str
        """
        allowed_values = ["发票", "清单", "结算单", "其它"]  # noqa: E501
        if image_type not in allowed_values:
            raise ValueError(
                "Invalid value for `image_type` ({0}), must be one of {1}"
                .format(image_type, allowed_values)
            )

        self._image_type = image_type

    @property
    def image_classification(self):
        """Gets the image_classification of this InvoiceResultDto.

        图片分类  # noqa: E501

        :return: The image_classification of this InvoiceResultDto.
        :rtype: str
        """
        return self._image_classification

    @image_classification.setter
    def image_classification(self, image_classification):
        """Sets the image_classification of this InvoiceResultDto.

        图片分类  # noqa: E501

        :param image_classification: The image_classification of this InvoiceResultDto.
        :type image_classification: str
        """
        allowed_values = ["门诊发票", "住院发票", "外购药发票", "门诊清单", "住院清单", "结算单", "其它"]  # noqa: E501
        if image_classification not in allowed_values:
            raise ValueError(
                "Invalid value for `image_classification` ({0}), must be one of {1}"
                .format(image_classification, allowed_values)
            )

        self._image_classification = image_classification

    @property
    def invoice_number(self):
        """Gets the invoice_number of this InvoiceResultDto.

        发票号码  # noqa: E501

        :return: The invoice_number of this InvoiceResultDto.
        :rtype: str
        """
        return self._invoice_number

    @invoice_number.setter
    def invoice_number(self, invoice_number):
        """Sets the invoice_number of this InvoiceResultDto.

        发票号码  # noqa: E501

        :param invoice_number: The invoice_number of this InvoiceResultDto.
        :type invoice_number: str
        """

        self._invoice_number = invoice_number

    @property
    def invoice_name(self):
        """Gets the invoice_name of this InvoiceResultDto.

        发票名称  # noqa: E501

        :return: The invoice_name of this InvoiceResultDto.
        :rtype: str
        """
        return self._invoice_name

    @invoice_name.setter
    def invoice_name(self, invoice_name):
        """Sets the invoice_name of this InvoiceResultDto.

        发票名称  # noqa: E501

        :param invoice_name: The invoice_name of this InvoiceResultDto.
        :type invoice_name: str
        """

        self._invoice_name = invoice_name

    @property
    def invoice_amount(self):
        """Gets the invoice_amount of this InvoiceResultDto.

        发票金额  # noqa: E501

        :return: The invoice_amount of this InvoiceResultDto.
        :rtype: float
        """
        return self._invoice_amount

    @invoice_amount.setter
    def invoice_amount(self, invoice_amount):
        """Sets the invoice_amount of this InvoiceResultDto.

        发票金额  # noqa: E501

        :param invoice_amount: The invoice_amount of this InvoiceResultDto.
        :type invoice_amount: float
        """

        self._invoice_amount = invoice_amount

    @property
    def invoice_date(self):
        """Gets the invoice_date of this InvoiceResultDto.

        开票日期  # noqa: E501

        :return: The invoice_date of this InvoiceResultDto.
        :rtype: str
        """
        return self._invoice_date

    @invoice_date.setter
    def invoice_date(self, invoice_date):
        """Sets the invoice_date of this InvoiceResultDto.

        开票日期  # noqa: E501

        :param invoice_date: The invoice_date of this InvoiceResultDto.
        :type invoice_date: str
        """

        self._invoice_date = invoice_date

    @property
    def hospital(self):
        """Gets the hospital of this InvoiceResultDto.

        医院名称或外购药开票单位名称  # noqa: E501

        :return: The hospital of this InvoiceResultDto.
        :rtype: str
        """
        return self._hospital

    @hospital.setter
    def hospital(self, hospital):
        """Sets the hospital of this InvoiceResultDto.

        医院名称或外购药开票单位名称  # noqa: E501

        :param hospital: The hospital of this InvoiceResultDto.
        :type hospital: str
        """

        self._hospital = hospital

    @property
    def hospital_grade(self):
        """Gets the hospital_grade of this InvoiceResultDto.

        医院等级  # noqa: E501

        :return: The hospital_grade of this InvoiceResultDto.
        :rtype: str
        """
        return self._hospital_grade

    @hospital_grade.setter
    def hospital_grade(self, hospital_grade):
        """Sets the hospital_grade of this InvoiceResultDto.

        医院等级  # noqa: E501

        :param hospital_grade: The hospital_grade of this InvoiceResultDto.
        :type hospital_grade: str
        """
        allowed_values = ["三级甲等", "三级乙等", "三级丙等", "二级甲等", "二级乙等", "二级丙等", "一级甲等", "一级乙等", "一级丙等", "其它"]  # noqa: E501
        if hospital_grade not in allowed_values:
            raise ValueError(
                "Invalid value for `hospital_grade` ({0}), must be one of {1}"
                .format(hospital_grade, allowed_values)
            )

        self._hospital_grade = hospital_grade

    @property
    def reimbursement_amount(self):
        """Gets the reimbursement_amount of this InvoiceResultDto.

        医保统筹（报销）金额  # noqa: E501

        :return: The reimbursement_amount of this InvoiceResultDto.
        :rtype: float
        """
        return self._reimbursement_amount

    @reimbursement_amount.setter
    def reimbursement_amount(self, reimbursement_amount):
        """Sets the reimbursement_amount of this InvoiceResultDto.

        医保统筹（报销）金额  # noqa: E501

        :param reimbursement_amount: The reimbursement_amount of this InvoiceResultDto.
        :type reimbursement_amount: float
        """

        self._reimbursement_amount = reimbursement_amount

    @property
    def all_expense_amount(self):
        """Gets the all_expense_amount of this InvoiceResultDto.

        全部自费金额  # noqa: E501

        :return: The all_expense_amount of this InvoiceResultDto.
        :rtype: float
        """
        return self._all_expense_amount

    @all_expense_amount.setter
    def all_expense_amount(self, all_expense_amount):
        """Sets the all_expense_amount of this InvoiceResultDto.

        全部自费金额  # noqa: E501

        :param all_expense_amount: The all_expense_amount of this InvoiceResultDto.
        :type all_expense_amount: float
        """

        self._all_expense_amount = all_expense_amount

    @property
    def parts_expense_amount(self):
        """Gets the parts_expense_amount of this InvoiceResultDto.

        部分自费金额  # noqa: E501

        :return: The parts_expense_amount of this InvoiceResultDto.
        :rtype: float
        """
        return self._parts_expense_amount

    @parts_expense_amount.setter
    def parts_expense_amount(self, parts_expense_amount):
        """Sets the parts_expense_amount of this InvoiceResultDto.

        部分自费金额  # noqa: E501

        :param parts_expense_amount: The parts_expense_amount of this InvoiceResultDto.
        :type parts_expense_amount: float
        """

        self._parts_expense_amount = parts_expense_amount

    @property
    def remark(self):
        """Gets the remark of this InvoiceResultDto.

        备注  # noqa: E501

        :return: The remark of this InvoiceResultDto.
        :rtype: str
        """
        return self._remark

    @remark.setter
    def remark(self, remark):
        """Sets the remark of this InvoiceResultDto.

        备注  # noqa: E501

        :param remark: The remark of this InvoiceResultDto.
        :type remark: str
        """

        self._remark = remark
