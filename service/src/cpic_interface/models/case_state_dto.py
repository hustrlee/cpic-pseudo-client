# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from cpic_interface.models.base_model_ import Model
from cpic_interface import util


class CaseStateDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, upload_time=None, state=None, zmark=None, ymark=None):  # noqa: E501
        """CaseStateDto - a model defined in OpenAPI

        :param upload_time: The upload_time of this CaseStateDto.  # noqa: E501
        :type upload_time: str
        :param state: The state of this CaseStateDto.  # noqa: E501
        :type state: int
        :param zmark: The zmark of this CaseStateDto.  # noqa: E501
        :type zmark: str
        :param ymark: The ymark of this CaseStateDto.  # noqa: E501
        :type ymark: str
        """
        self.openapi_types = {
            'upload_time': str,
            'state': int,
            'zmark': str,
            'ymark': str
        }

        self.attribute_map = {
            'upload_time': 'uploadTime',
            'state': 'state',
            'zmark': 'zmark',
            'ymark': 'ymark'
        }

        self._upload_time = upload_time
        self._state = state
        self._zmark = zmark
        self._ymark = ymark

    @classmethod
    def from_dict(cls, dikt) -> 'CaseStateDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CaseStateDto of this CaseStateDto.  # noqa: E501
        :rtype: CaseStateDto
        """
        return util.deserialize_model(dikt, cls)

    @property
    def upload_time(self):
        """Gets the upload_time of this CaseStateDto.

        任务的上传时间  # noqa: E501

        :return: The upload_time of this CaseStateDto.
        :rtype: str
        """
        return self._upload_time

    @upload_time.setter
    def upload_time(self, upload_time):
        """Sets the upload_time of this CaseStateDto.

        任务的上传时间  # noqa: E501

        :param upload_time: The upload_time of this CaseStateDto.
        :type upload_time: str
        """

        self._upload_time = upload_time

    @property
    def state(self):
        """Gets the state of this CaseStateDto.

        任务状态。0：尚未开始；1：处理中；2：处理完成  # noqa: E501

        :return: The state of this CaseStateDto.
        :rtype: int
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CaseStateDto.

        任务状态。0：尚未开始；1：处理中；2：处理完成  # noqa: E501

        :param state: The state of this CaseStateDto.
        :type state: int
        """
        allowed_values = [0, 1, 2]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def zmark(self):
        """Gets the zmark of this CaseStateDto.

        来自前置平台的备注  # noqa: E501

        :return: The zmark of this CaseStateDto.
        :rtype: str
        """
        return self._zmark

    @zmark.setter
    def zmark(self, zmark):
        """Sets the zmark of this CaseStateDto.

        来自前置平台的备注  # noqa: E501

        :param zmark: The zmark of this CaseStateDto.
        :type zmark: str
        """

        self._zmark = zmark

    @property
    def ymark(self):
        """Gets the ymark of this CaseStateDto.

        来自识别平台的备注  # noqa: E501

        :return: The ymark of this CaseStateDto.
        :rtype: str
        """
        return self._ymark

    @ymark.setter
    def ymark(self, ymark):
        """Sets the ymark of this CaseStateDto.

        来自识别平台的备注  # noqa: E501

        :param ymark: The ymark of this CaseStateDto.
        :type ymark: str
        """

        self._ymark = ymark
