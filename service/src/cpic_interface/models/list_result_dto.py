# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from cpic_interface.models.base_model_ import Model
from cpic_interface.models.image_type_dto import ImageTypeDto
from cpic_interface.models.list_item_dto import ListItemDto
from cpic_interface.models.list_result_dto_all_of import ListResultDtoAllOf
from cpic_interface import util

from cpic_interface.models.image_type_dto import ImageTypeDto  # noqa: E501
from cpic_interface.models.list_item_dto import ListItemDto  # noqa: E501
from cpic_interface.models.list_result_dto_all_of import ListResultDtoAllOf  # noqa: E501

class ListResultDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_type=None, image_classification=None, list_name=None, hospital=None, name=None, associated_invoice_number=None, remark=None, list=None):  # noqa: E501
        """ListResultDto - a model defined in OpenAPI

        :param image_type: The image_type of this ListResultDto.  # noqa: E501
        :type image_type: str
        :param image_classification: The image_classification of this ListResultDto.  # noqa: E501
        :type image_classification: str
        :param list_name: The list_name of this ListResultDto.  # noqa: E501
        :type list_name: str
        :param hospital: The hospital of this ListResultDto.  # noqa: E501
        :type hospital: str
        :param name: The name of this ListResultDto.  # noqa: E501
        :type name: str
        :param associated_invoice_number: The associated_invoice_number of this ListResultDto.  # noqa: E501
        :type associated_invoice_number: str
        :param remark: The remark of this ListResultDto.  # noqa: E501
        :type remark: str
        :param list: The list of this ListResultDto.  # noqa: E501
        :type list: List[ListItemDto]
        """
        self.openapi_types = {
            'image_type': str,
            'image_classification': str,
            'list_name': str,
            'hospital': str,
            'name': str,
            'associated_invoice_number': str,
            'remark': str,
            'list': List[ListItemDto]
        }

        self.attribute_map = {
            'image_type': 'imageType',
            'image_classification': 'imageClassification',
            'list_name': 'listName',
            'hospital': 'hospital',
            'name': 'name',
            'associated_invoice_number': 'associatedInvoiceNumber',
            'remark': 'remark',
            'list': 'list'
        }

        self._image_type = image_type
        self._image_classification = image_classification
        self._list_name = list_name
        self._hospital = hospital
        self._name = name
        self._associated_invoice_number = associated_invoice_number
        self._remark = remark
        self._list = list

    @classmethod
    def from_dict(cls, dikt) -> 'ListResultDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ListResultDto of this ListResultDto.  # noqa: E501
        :rtype: ListResultDto
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_type(self):
        """Gets the image_type of this ListResultDto.

        图片类型。  # noqa: E501

        :return: The image_type of this ListResultDto.
        :rtype: str
        """
        return self._image_type

    @image_type.setter
    def image_type(self, image_type):
        """Sets the image_type of this ListResultDto.

        图片类型。  # noqa: E501

        :param image_type: The image_type of this ListResultDto.
        :type image_type: str
        """
        allowed_values = ["发票", "清单", "结算单", "其它"]  # noqa: E501
        if image_type not in allowed_values:
            raise ValueError(
                "Invalid value for `image_type` ({0}), must be one of {1}"
                .format(image_type, allowed_values)
            )

        self._image_type = image_type

    @property
    def image_classification(self):
        """Gets the image_classification of this ListResultDto.

        图片分类  # noqa: E501

        :return: The image_classification of this ListResultDto.
        :rtype: str
        """
        return self._image_classification

    @image_classification.setter
    def image_classification(self, image_classification):
        """Sets the image_classification of this ListResultDto.

        图片分类  # noqa: E501

        :param image_classification: The image_classification of this ListResultDto.
        :type image_classification: str
        """
        allowed_values = ["门诊发票", "住院发票", "外购药发票", "门诊清单", "住院清单", "结算单", "其它"]  # noqa: E501
        if image_classification not in allowed_values:
            raise ValueError(
                "Invalid value for `image_classification` ({0}), must be one of {1}"
                .format(image_classification, allowed_values)
            )

        self._image_classification = image_classification

    @property
    def list_name(self):
        """Gets the list_name of this ListResultDto.

        清单名称  # noqa: E501

        :return: The list_name of this ListResultDto.
        :rtype: str
        """
        return self._list_name

    @list_name.setter
    def list_name(self, list_name):
        """Sets the list_name of this ListResultDto.

        清单名称  # noqa: E501

        :param list_name: The list_name of this ListResultDto.
        :type list_name: str
        """

        self._list_name = list_name

    @property
    def hospital(self):
        """Gets the hospital of this ListResultDto.

        医院名称  # noqa: E501

        :return: The hospital of this ListResultDto.
        :rtype: str
        """
        return self._hospital

    @hospital.setter
    def hospital(self, hospital):
        """Sets the hospital of this ListResultDto.

        医院名称  # noqa: E501

        :param hospital: The hospital of this ListResultDto.
        :type hospital: str
        """

        self._hospital = hospital

    @property
    def name(self):
        """Gets the name of this ListResultDto.

        清单上的姓名  # noqa: E501

        :return: The name of this ListResultDto.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ListResultDto.

        清单上的姓名  # noqa: E501

        :param name: The name of this ListResultDto.
        :type name: str
        """

        self._name = name

    @property
    def associated_invoice_number(self):
        """Gets the associated_invoice_number of this ListResultDto.

        此清单所对应的发票号  # noqa: E501

        :return: The associated_invoice_number of this ListResultDto.
        :rtype: str
        """
        return self._associated_invoice_number

    @associated_invoice_number.setter
    def associated_invoice_number(self, associated_invoice_number):
        """Sets the associated_invoice_number of this ListResultDto.

        此清单所对应的发票号  # noqa: E501

        :param associated_invoice_number: The associated_invoice_number of this ListResultDto.
        :type associated_invoice_number: str
        """

        self._associated_invoice_number = associated_invoice_number

    @property
    def remark(self):
        """Gets the remark of this ListResultDto.

        备注  # noqa: E501

        :return: The remark of this ListResultDto.
        :rtype: str
        """
        return self._remark

    @remark.setter
    def remark(self, remark):
        """Sets the remark of this ListResultDto.

        备注  # noqa: E501

        :param remark: The remark of this ListResultDto.
        :type remark: str
        """

        self._remark = remark

    @property
    def list(self):
        """Gets the list of this ListResultDto.

        清单识别明细  # noqa: E501

        :return: The list of this ListResultDto.
        :rtype: List[ListItemDto]
        """
        return self._list

    @list.setter
    def list(self, list):
        """Sets the list of this ListResultDto.

        清单识别明细  # noqa: E501

        :param list: The list of this ListResultDto.
        :type list: List[ListItemDto]
        """

        self._list = list
